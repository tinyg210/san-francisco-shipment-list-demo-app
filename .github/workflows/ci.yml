name: Create Infra on LocalStack

on:
  push:
    paths-ignore:
      - 'README.md'
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    # “At 00:00 on Sunday.”
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  infrastructure-check:
    name: Setup infrastructure using Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Maven
        run: sudo apt-get install -y maven

      - name: Install localstack & awslocal
        run: |
          pip install localstack
          pip install terraform-local
          pip install awscli-local

      - name: Build project
        run: |
          cd shipment-picture-lambda-validator
          mvn clean package shade:shade

      - name: Start LocalStack
        run: |
          docker pull localstack/localstack:latest
          # Start LocalStack in the background
          LS_LOG=trace localstack start -d
          # Wait 30 seconds for the LocalStack container to become ready before timing out
          echo "Waiting for LocalStack startup..."
          localstack wait -t 15
          echo "Startup complete"

      - name: Run Terraform Config File
        run: |
          cd terraform
          bash run-tflocal.sh

      - name: Check for Bucket
        run: |
          output=$(awslocal s3api list-buckets --query "Buckets[?contains(Name, 'shipment-picture-bucket')].Name" --output text)
          if [ -z "$output" ]; then
            echo "Created bucket not found."
            exit 1
          else echo "Bucket with random name was found: $output"
          fi

      - name: Send a Slack notification
        if: failure() || github.event_name != 'pull_request'
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "{workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
          footer: "Linked Repo <{repo_url}|{repo}> | <{run_url}|View Workflow run>"
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Generate a Diagnostic Report
        if: failure()
        run: |
          curl -s localhost:4566/_localstack/diagnose | gzip -cf > diagnose.json.gz

      - name: Upload the Diagnostic Report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: diagnose.json.gz
          path: ./diagnose.json.gz